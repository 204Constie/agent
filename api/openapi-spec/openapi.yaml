openapi: 3.0.0
info:
  title: Optimizely Agent API
  description: Optimizely Agent - Full Stack REST API
  termsOfService: http://optimizely.com/terms/
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.2.0
security:
  - SdkKeyAuth: []
paths:
  /v1/describe:
    get:
      summary: Return all features and experiments as a map
      operationId: describeAll
      description: Return all available experiment and features definitions for this environment.
      tags:
        - describe
      responses:
        '200':
          description: Valid response
          content:
            application/json:
              schema:
                description: Optimizely Configuration
                type: array
                items:
                  $ref: '#/components/schemas/Feature'
        '403':
          $ref: '#/components/responses/Forbidden'
  /v1/describe/{decisionKey}:
    parameters:
      - $ref: '#/components/parameters/decisionKeyParam'
    get:
      summary: Describes the experiment or feature corresponding to this key.
      operationId: describe
      description: Get feature decribes feature definition for the given feature key.
      tags:
        - describe
      responses:
        '200':
          description: Valid response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feature'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Experiment does not exist
  /v1/track/{eventKey}:
    parameters:
      - $ref: '#/components/parameters/eventKeyParam'
    post:
      summary: Track event for the given user.
      operationId: trackEvent
      description: Track sends event and user details to Optimizelyâ€™s analytics backend for the analysis of
        a feature test or a/b test.
      tags:
        - track
      responses:
        '204':
          description: No content, user not included in the experiment
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Event does not exist
      requestBody:
        $ref: '#/components/requestBodies/TrackContext'
  /v1/activate:
    parameters:
      - $ref: '#/components/parameters/trackParam'
      - $ref: '#/components/parameters/filterParam'
    post:
      summary: Determine the state of ALL features and experiments for the given user.
      operationId: activateAll
      description: Decide iterates over all features and experiments and returns the decision
        for the given user. All features are included regardless of whether the feature is enabled.
        An impression event will sent to the Optimizely analytics backend for any decision made for
        and experiment or feature test.
      tags:
        - activate
      responses:
        '200':
          description: Valid response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Decision'
        '403':
          $ref: '#/components/responses/Forbidden'
      requestBody:
        $ref: '#/components/requestBodies/DecisionContext'
  /v1/activate/{decisionKey}:
    parameters:
      - $ref: '#/components/parameters/decisionKeyParam'
      - $ref: '#/components/parameters/trackParam'
      - $ref: '#/components/parameters/filterParam'
    post:
      summary: Decide on feature or experiment state for a given user and return associated variable values
      operationId: activate
      description: Determine the feature flag or experiment decisions for the supplied user context. If the decision was made
        as part of an experiment or feature test or an ab experiment, then this API will send an impression event to
        Optimizely tracking servers.
      tags:
        - activate
      responses:
        '200':
          description: Valid response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Decision'
        '204':
          description: No content, user not included in the experiment
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Feature does not exist
      requestBody:
        $ref: '#/components/requestBodies/DecisionContext'
  /v1/override/{decisionKey}:
    parameters:
      - $ref: '#/components/parameters/decisionKeyParam'
      - $ref: '#/components/parameters/variationKeyParam'
    put:
      summary: Override an experiment decision for a user
      operationId: override
      description: Override a experiment or feature test decision used in future user
        based decisions. This override is only stored locally and inmemory for debugging and testing purposes
        and should not be used for production overrides.
      tags:
        - override
      responses:
        '201':
          description: Forced variation set
        '204':
          description: Forced variation was already set
        '400':
          description: Invalid user id, experiment key, or variation key
        '403':
          $ref: '#/components/responses/Forbidden'
      requestBody:
        $ref: '#/components/requestBodies/OverrideContext'
components:
  parameters:
    trackParam:
      in: query
      name: track
      required: false
      description: Setting track to false will disable impression tracking for ab experiments or feature tests.
      schema:
        type: boolean
    eventKeyParam:
      in: path
      name: eventKey
      required: true
      description: Key of the event we're tracking
      schema:
        type: string
    experimentKeyParam:
      in: path
      name: experimentKey
      required: true
      description: Key of the experiment we're fetching
      schema:
        type: string
    featureKeyParam:
      in: path
      name: featureKey
      required: true
      description: Key of the feature we're fetching
      schema:
        type: string
    filterParam:
      in: query
      name: filter
      required: false
      description: Limit the decisions to either experiment or features
      schema:
        type: string
        enum:
          - features
          - experiments
    decisionKeyParam:
      in: path
      name: decisionKey
      required: true
      description: Decision key can be either a featureKey or experimentKey we're deciding on. If the key is shared by both experiment and feature, the decision for the feature will be made.
      schema:
        type: string
    variationKeyParam:
      name: variationKey
      in: path
      required: true
      description: Key of the variation we're overriding
      schema:
        type: string
  requestBodies:
    DecisionContext:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DecisionContext'
    OverrideContext:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OverrideContext'
            type: object
            additionalProperties: true
    TrackContext:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TrackContext'
            type: object
            additionalProperties: true
  responses:
    Forbidden:
      description: You do not have necessary permissions for the resource
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  schemas:
    Error:
      properties:
        error:
          type: string
    Experiment:
      properties:
        id:
          type: integer
        key:
          type: string
        variationsMap:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Variation'
      required:
        - id
        - key
    Feature:
      properties:
        id:
          type: integer
        key:
          type: string
        variablesMap:
          type: object
          additionalProperties:
            type: string
        experimentsMap:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Experiment'
      required:
        - id
        - key
    Decision:
      properties:
#        id:
#          type: integer
        key:
          type: string
        enabled:
          type: boolean
        variables:
          type: object
          additionalProperties:
            type: string
      required:
#        - id
        - key
    DecisionContext:
      properties:
        userId:
          type: string
        userAttributes:
          type: object
          additionalProperties: true
    OverrideContext:
      properties:
        userId:
          type: string
    Revision:
      properties:
        revision:
          type: string
    TrackContext:
      properties:
        userId:
          type: string
        userAttributes:
          type: object
          additionalProperties: true
        eventTags:
          type: object
          additionalProperties: true
    Variation:
      properties:
        id:
          type: string
        key:
          type: string
      required:
        - id
        - key
    Variable:
      properties:
        id:
          type: string
        key:
          type: string
        type:
          type: string
        value:
          type: string
      required:
        - id
        - key
  securitySchemes:
    SdkKeyAuth:
      in: header
      name: X-Optimizely-SDK-Key
      type: apiKey
tags:
  - name: describe
    description: Collection of APIs to describe the active Optimizely Configuration.
    externalDocs:
      url: https://docs.developers.optimizely.com/full-stack/docs/welcome
  - name: activate
    description: Collection of APIs to make experiment, rollout and feature flagging decisions.
    externalDocs:
      url: https://docs.developers.optimizely.com/full-stack/docs/welcome
  - name: track
    description: Collection of APIs to track conversions.
    externalDocs:
      url: https://docs.developers.optimizely.com/full-stack/docs/welcome
